[{"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/index.tsx":"1","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/reportWebVitals.ts":"2","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/pages/home/index.tsx":"3","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/changeChain.ts":"4","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/contract.ts":"5","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/utils/notification.tsx":"6","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/loading/index.tsx":"7","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/components/row/index.tsx":"8","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/utils/utils.ts":"9"},{"size":798,"mtime":1658686797014,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1658686797014,"results":"12","hashOfConfig":"11"},{"size":9342,"mtime":1658734720585,"results":"13","hashOfConfig":"11"},{"size":901,"mtime":1658728626988,"results":"14","hashOfConfig":"11"},{"size":263,"mtime":1658729706661,"results":"15","hashOfConfig":"11"},{"size":608,"mtime":1658730289181,"results":"16","hashOfConfig":"11"},{"size":118,"mtime":1658686797014,"results":"17","hashOfConfig":"11"},{"size":832,"mtime":1658734028445,"results":"18","hashOfConfig":"11"},{"size":217,"mtime":1658734692261,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1yl0lwo",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/index.tsx",[],["40","41"],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/reportWebVitals.ts",[],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/pages/home/index.tsx",[],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/changeChain.ts",[],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/contract.ts",[],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/utils/notification.tsx",["42"],"const { NotificationManager } = require('react-notifications');\n\nexport enum MessageType {\n  INFO,\n  SUCCESS,\n  WARNING,\n  ERROR\n};\n\nexport function Notification(type: MessageType, massage: any) {\n  let not;\n  switch (type) {\n    case MessageType.INFO:\n      return NotificationManager.info('Info', 3000);\n    case MessageType.SUCCESS:\n      return NotificationManager.success(massage, 'Success', 3000);\n    case MessageType.WARNING:\n      return NotificationManager.warning(massage, 'Warning', 3000);\n    case MessageType.ERROR:\n      return NotificationManager.error(massage.message, 'Error', 3000);\n  };\n}","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/loading/index.tsx",[],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/components/row/index.tsx",[],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/utils/utils.ts",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":11,"column":7,"nodeType":"49","messageId":"50","endLine":11,"endColumn":10},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"@typescript-eslint/no-unused-vars","'not' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]